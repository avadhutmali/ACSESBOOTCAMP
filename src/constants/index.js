import app1 from '../components/apps/app1.png'; 
import app2 from '../components/apps/app2.png';
import app3 from '../components/apps/app3.png';
import app4 from '../components/apps/app4.png';
import app5 from '../components/apps/app5.png';
import app6 from '../components/apps/app6.png';
import app7 from '../components/apps/app7.png';

export const collabApps = [
  {
    id: 1,
    icon: app1,
    width: 60,
    height: 60,
    title: "App 1",
  },
  {
    id: 2,
    icon: app2,
    width: 60,
    height: 60,
    title: "App 2",
  },
  {
    id: 3,
    icon: app3,
    width: 60,
    height: 60,
    title: "App 3",
  },
  {
    id: 4,
    icon: app4,
    width: 60,
    height: 60,
    title: "App 4",
  },
  {
    id: 5,
    icon: app5,
    width: 60,
    height: 60,
    title: "App 5",
  },
  {
    id: 6,
    icon: app6,
    width: 60,
    height: 60,
    title: "App 6",
  },
  {
    id: 7,
    icon: app7,
    width: 60,
    height: 60,
    title: "App 7",
  },
];

export const sessionInfo = [
  {
    session_name: "C++ Basics Unlocked",
    description:
      "Start your C++ journey by mastering the basics! This session covers essential programming concepts such as variables, keywords, data types, and arrays (1D and 2D). Youâ€™ll also dive into loops and control statements to build a strong foundation for problem-solving.",
  },
  {
    session_name: "Functions & OOP Essentials",
    description:
      "Learn how to write efficient and reusable code with functions and pointers. Get introduced to Object-Oriented Programming (OOP) concepts, including classes and objects, to create structured and modular programs.",
  },
  {
    session_name: "OOP Mastery: Pillars & Practices",
    description:
      "Deepen your understanding of OOP with the Four Pillars (Inheritance, Polymorphism, Encapsulation, Abstraction). Explore the `this` keyword and access specifiers to control data and behavior effectively in your applications.",
  },
  {
    session_name: "STL Toolkit: Data Structures Simplified",
    description:
      "Discover the power of C++ Standard Template Library (STL). Learn to work with vectors, sets, maps, stacks, queues, and priority queues to handle complex data structures with ease.",
  },
];
